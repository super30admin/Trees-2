/*
TC: O(n)
SC: O(h)
thought process: Get root from postorder/preorder traversal and detect boundaries rom inorder traversal
 */

class PostOrderInorder{

    HashMap<Integer,Integer> map;
    int index;
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        map = new HashMap<>();
        index = postorder.length-1;
        for (int i = 0; i < inorder.length; i++){
            map.put(inorder[i],i);
        }
        return helper(inorder,postorder,0,inorder.length-1);
    }

    private TreeNode helper(int[] inorder, int[] postorder,int start, int end){
        if (start > end) return null;
        TreeNode root = new TreeNode(postorder[index]);
        index--;
        root.right = helper(inorder,postorder,map.get(root.val)+1,end);
        root.left = helper(inorder,postorder,start,map.get(root.val)-1);
        return root;
    }
}
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
   
    public int sumNumbers(TreeNode root) {
        int sum =0;
        int currNum = 0;
        
        if(root == null)
            return 0;
        
        Stack<Node> st = new Stack<>();
        
        while(root != null || !st.isEmpty()) {
            while(root != null){
                currNum = currNum*10+root.val;
                Node n = new Node(root,currNum);
                st.push(n);
                root = root.left;
            }
            Node current = st.pop();
            
            root = current.node;
            currNum = current.val;
            if(root.left == null && root.right == null){
                sum += currNum;
            }
            root = root.right;
            
        }
        return sum;
    }
}

class Node {
    TreeNode node;
    int val;
    
    public Node(TreeNode node,int val){
        this.node = node;
        this.val = val;
    }
}
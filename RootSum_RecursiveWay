/**
* This is recursive pattern 
* Time complexity : O(n) as we are traversing all the nodes
*Space complexity: O(h) as worst case the nodes in recursive stack are not going to be more than height of the tree
*/
class Solution {
    int result=0;
 
    public int sumNumbers(TreeNode root) {        
        if(root == null) return 0;
        helper(root,0);
        return result;
        
    } 
    
    public void helper(TreeNode root,int currentSum){
        if(root==null) return;
        currentSum = currentSum * 10 + root.val;
        helper(root.left,currentSum);
        if(root.left==null && root.right==null){
            result = result + currentSum;
        }
        helper(root.right,currentSum);
        
    }
}

Time : O(n)
Space : O(1)

class Solution:
    def sumNumbers(self, root: Optional[TreeNode]) -> int:
        if root == None:
            return 0
        
        self.Sum = 0
        self.helper(root,0)
        return self.Sum
        
    def helper(self,root,num):
        #base case
        if root == None:
            return 0
        #logic
        num = num * 10 + root.val
        
        if(root.left == None and root.right == None):
            self.Sum = self.Sum + num
            
        self.helper(root.left,num)
        #stack.pop() 
        # root and num pops out
        
        self.helper(root.right,num)
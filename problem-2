/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 
 Time : O(2 pow N)
 Space : O(N)
class Solution {
    public int sumNumbers(TreeNode root) {
        Stack<TreeNode,Integer> st=new Stack<>();
        int curr=0;
        int result=0;
        while(root!=null || !st.isEmpty()){
            while(root!=null){
                curr=curr*10+root.val;
                st.push(root,curr);
                root=root.left;
            }
            root=st.pop();
            result+=root
            while(root!=null){
                curr=curr*10+root.val;
                st.
            }
        }
        
    }
}

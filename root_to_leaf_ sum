// Time Complexity :O(n) where n is nodes
// Space Complexity :recursion stack + O(1)
// Did this code successfully run on Leetcode : Yes
// Any problem you faced while coding this : No


// Your code here along with comments explaining your approach



class Solution {
    public int sumNumbers(TreeNode root) {
        if(root == null ) return 0;
        return helper(root, 0);
    }
    private int helper(TreeNode root, int currSum){
        if(root == null  ) return 0;
        
        if(root.left== null && root.right == null){
            return currSum*10 + root.val;
        }
        
        int left = helper(root.left, currSum*10+ root.val);
        int right = helper(root.right, currSum*10+ root.val);
        
        return left+right;
    }
}
